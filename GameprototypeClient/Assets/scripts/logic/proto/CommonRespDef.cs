// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public static partial class CommonRespDef {

  #region Extension registration
  public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
  }
  #endregion
  #region Static variables
  internal static pbd::MessageDescriptor internal__static_CommonResp__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CommonResp, global::CommonResp.Builder> internal__static_CommonResp__FieldAccessorTable;
  #endregion
  #region Descriptor
  public static pbd::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbd::FileDescriptor descriptor;
  
  static CommonRespDef() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChNDb21tb25SZXNwRGVmLnByb3RvIoUDCgpDb21tb25SZXNwEiIKBGNvZGUY", 
          "ASACKA4yFC5Db21tb25SZXNwLlJlc3BDb2RlEgwKBGluZm8YAiABKAkixAIK", 
          "CFJlc3BDb2RlEgsKB1NVQ0NFU1MQABIaChVQQVJTRV9SRVFfUEFSQU1fRVJS", 
          "T1IQkAMSEwoOSU5URVJOQUxfRVJST1IQ9AMSIgoVTE9HSU5fQUNDT1VOVF9V", 
          "TkVYSVNUEP///////////wESIQoUTE9HSU5fUEFTU1dPUkRfRVJST1IQ/v//", 
          "////////ARIpChxMT0dJTl9BQ0NPVU5UX0FMUkVBRFlfT05MSU5FEP3/////", 
          "/////wESLAofUkVHSVNURVJfQUNDT1VOVF9BTFJFQURZX0VYSVNUUxD8////", 
          "//////8BEioKHVJFR0lTVEVSX0FDQ09VTlRfTkFNRV9JTExFR0FMEPv/////", 
          "/////wESLgohUkVHSVNURVJfQUNDT1VOVF9QQVNTV09SRF9JTExFR0FMEPr/", 
        "/////////wFCHQobb3JnLmdhbWVwcm90b3R5cGUucHJvdG8uc3Jj"));
    pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
      descriptor = root;
      internal__static_CommonResp__Descriptor = Descriptor.MessageTypes[0];
      internal__static_CommonResp__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CommonResp, global::CommonResp.Builder>(internal__static_CommonResp__Descriptor,
              new string[] { "Code", "Info", });
      return null;
    };
    pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
        new pbd::FileDescriptor[] {
        }, assigner);
  }
  #endregion
  
}
#region Messages
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CommonResp : pb::GeneratedMessage<CommonResp, CommonResp.Builder> {
  private CommonResp() { }
  private static readonly CommonResp defaultInstance = new CommonResp().MakeReadOnly();
  private static readonly string[] _commonRespFieldNames = new string[] { "code", "info" };
  private static readonly uint[] _commonRespFieldTags = new uint[] { 8, 18 };
  public static CommonResp DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CommonResp DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CommonResp ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::CommonRespDef.internal__static_CommonResp__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CommonResp, CommonResp.Builder> InternalFieldAccessors {
    get { return global::CommonRespDef.internal__static_CommonResp__FieldAccessorTable; }
  }
  
  #region Nested types
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Types {
    public enum RespCode {
      SUCCESS = 0,
      PARSE_REQ_PARAM_ERROR = 400,
      INTERNAL_ERROR = 500,
      LOGIN_ACCOUNT_UNEXIST = -1,
      LOGIN_PASSWORD_ERROR = -2,
      LOGIN_ACCOUNT_ALREADY_ONLINE = -3,
      REGISTER_ACCOUNT_ALREADY_EXISTS = -4,
      REGISTER_ACCOUNT_NAME_ILLEGAL = -5,
      REGISTER_ACCOUNT_PASSWORD_ILLEGAL = -6,
    }
    
  }
  #endregion
  
  public const int CodeFieldNumber = 1;
  private bool hasCode;
  private global::CommonResp.Types.RespCode code_ = global::CommonResp.Types.RespCode.SUCCESS;
  public bool HasCode {
    get { return hasCode; }
  }
  public global::CommonResp.Types.RespCode Code {
    get { return code_; }
  }
  
  public const int InfoFieldNumber = 2;
  private bool hasInfo;
  private string info_ = "";
  public bool HasInfo {
    get { return hasInfo; }
  }
  public string Info {
    get { return info_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasCode) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _commonRespFieldNames;
    if (hasCode) {
      output.WriteEnum(1, field_names[0], (int) Code, Code);
    }
    if (hasInfo) {
      output.WriteString(2, field_names[1], Info);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasCode) {
      size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Code);
    }
    if (hasInfo) {
      size += pb::CodedOutputStream.ComputeStringSize(2, Info);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static CommonResp ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CommonResp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CommonResp ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CommonResp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CommonResp ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CommonResp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CommonResp ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CommonResp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CommonResp ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CommonResp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CommonResp MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CommonResp prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CommonResp, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CommonResp cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CommonResp result;
    
    private CommonResp PrepareBuilder() {
      if (resultIsReadOnly) {
        CommonResp original = result;
        result = new CommonResp();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CommonResp MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CommonResp.Descriptor; }
    }
    
    public override CommonResp DefaultInstanceForType {
      get { return global::CommonResp.DefaultInstance; }
    }
    
    public override CommonResp BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CommonResp) {
        return MergeFrom((CommonResp) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CommonResp other) {
      if (other == global::CommonResp.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasInfo) {
        Info = other.Info;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_commonRespFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _commonRespFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            object unknown;
            if(input.ReadEnum(ref result.code_, out unknown)) {
              result.hasCode = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(1, (ulong)(int)unknown);
            }
            break;
          }
          case 18: {
            result.hasInfo = input.ReadString(ref result.info_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasCode {
     get { return result.hasCode; }
    }
    public global::CommonResp.Types.RespCode Code {
      get { return result.Code; }
      set { SetCode(value); }
    }
    public Builder SetCode(global::CommonResp.Types.RespCode value) {
      PrepareBuilder();
      result.hasCode = true;
      result.code_ = value;
      return this;
    }
    public Builder ClearCode() {
      PrepareBuilder();
      result.hasCode = false;
      result.code_ = global::CommonResp.Types.RespCode.SUCCESS;
      return this;
    }
    
    public bool HasInfo {
      get { return result.hasInfo; }
    }
    public string Info {
      get { return result.Info; }
      set { SetInfo(value); }
    }
    public Builder SetInfo(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasInfo = true;
      result.info_ = value;
      return this;
    }
    public Builder ClearInfo() {
      PrepareBuilder();
      result.hasInfo = false;
      result.info_ = "";
      return this;
    }
  }
  static CommonResp() {
    object.ReferenceEquals(global::CommonRespDef.Descriptor, null);
  }
}

#endregion


#endregion Designer generated code
