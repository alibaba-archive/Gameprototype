// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public static partial class SocketModelDef {

  #region Extension registration
  public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
  }
  #endregion
  #region Static variables
  internal static pbd::MessageDescriptor internal__static_SocketModelPB__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::SocketModelPB, global::SocketModelPB.Builder> internal__static_SocketModelPB__FieldAccessorTable;
  #endregion
  #region Descriptor
  public static pbd::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbd::FileDescriptor descriptor;
  
  static SocketModelDef() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChRTb2NrZXRNb2RlbERlZi5wcm90byJNCg1Tb2NrZXRNb2RlbFBCEgwKBHR5", 
          "cGUYASACKAUSDAoEYXJlYRgCIAIoBRIPCgdjb21tYW5kGAMgAigFEg8KB2Nv", 
        "bnRlbnQYBCACKAxCHQobb3JnLmdhbWVwcm90b3R5cGUucHJvdG8uc3Jj"));
    pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
      descriptor = root;
      internal__static_SocketModelPB__Descriptor = Descriptor.MessageTypes[0];
      internal__static_SocketModelPB__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::SocketModelPB, global::SocketModelPB.Builder>(internal__static_SocketModelPB__Descriptor,
              new string[] { "Type", "Area", "Command", "Content", });
      return null;
    };
    pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
        new pbd::FileDescriptor[] {
        }, assigner);
  }
  #endregion
  
}
#region Messages
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class SocketModelPB : pb::GeneratedMessage<SocketModelPB, SocketModelPB.Builder> {
  private SocketModelPB() { }
  private static readonly SocketModelPB defaultInstance = new SocketModelPB().MakeReadOnly();
  private static readonly string[] _socketModelPBFieldNames = new string[] { "area", "command", "content", "type" };
  private static readonly uint[] _socketModelPBFieldTags = new uint[] { 16, 24, 34, 8 };
  public static SocketModelPB DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override SocketModelPB DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override SocketModelPB ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::SocketModelDef.internal__static_SocketModelPB__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<SocketModelPB, SocketModelPB.Builder> InternalFieldAccessors {
    get { return global::SocketModelDef.internal__static_SocketModelPB__FieldAccessorTable; }
  }
  
  public const int TypeFieldNumber = 1;
  private bool hasType;
  private int type_;
  public bool HasType {
    get { return hasType; }
  }
  public int Type {
    get { return type_; }
  }
  
  public const int AreaFieldNumber = 2;
  private bool hasArea;
  private int area_;
  public bool HasArea {
    get { return hasArea; }
  }
  public int Area {
    get { return area_; }
  }
  
  public const int CommandFieldNumber = 3;
  private bool hasCommand;
  private int command_;
  public bool HasCommand {
    get { return hasCommand; }
  }
  public int Command {
    get { return command_; }
  }
  
  public const int ContentFieldNumber = 4;
  private bool hasContent;
  private pb::ByteString content_ = pb::ByteString.Empty;
  public bool HasContent {
    get { return hasContent; }
  }
  public pb::ByteString Content {
    get { return content_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasType) return false;
      if (!hasArea) return false;
      if (!hasCommand) return false;
      if (!hasContent) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _socketModelPBFieldNames;
    if (hasType) {
      output.WriteInt32(1, field_names[3], Type);
    }
    if (hasArea) {
      output.WriteInt32(2, field_names[0], Area);
    }
    if (hasCommand) {
      output.WriteInt32(3, field_names[1], Command);
    }
    if (hasContent) {
      output.WriteBytes(4, field_names[2], Content);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasType) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, Type);
    }
    if (hasArea) {
      size += pb::CodedOutputStream.ComputeInt32Size(2, Area);
    }
    if (hasCommand) {
      size += pb::CodedOutputStream.ComputeInt32Size(3, Command);
    }
    if (hasContent) {
      size += pb::CodedOutputStream.ComputeBytesSize(4, Content);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static SocketModelPB ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static SocketModelPB ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static SocketModelPB ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static SocketModelPB ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static SocketModelPB ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static SocketModelPB ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static SocketModelPB ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static SocketModelPB ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static SocketModelPB ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static SocketModelPB ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private SocketModelPB MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(SocketModelPB prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<SocketModelPB, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(SocketModelPB cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private SocketModelPB result;
    
    private SocketModelPB PrepareBuilder() {
      if (resultIsReadOnly) {
        SocketModelPB original = result;
        result = new SocketModelPB();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override SocketModelPB MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::SocketModelPB.Descriptor; }
    }
    
    public override SocketModelPB DefaultInstanceForType {
      get { return global::SocketModelPB.DefaultInstance; }
    }
    
    public override SocketModelPB BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is SocketModelPB) {
        return MergeFrom((SocketModelPB) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(SocketModelPB other) {
      if (other == global::SocketModelPB.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasArea) {
        Area = other.Area;
      }
      if (other.HasCommand) {
        Command = other.Command;
      }
      if (other.HasContent) {
        Content = other.Content;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_socketModelPBFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _socketModelPBFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasType = input.ReadInt32(ref result.type_);
            break;
          }
          case 16: {
            result.hasArea = input.ReadInt32(ref result.area_);
            break;
          }
          case 24: {
            result.hasCommand = input.ReadInt32(ref result.command_);
            break;
          }
          case 34: {
            result.hasContent = input.ReadBytes(ref result.content_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasType {
      get { return result.hasType; }
    }
    public int Type {
      get { return result.Type; }
      set { SetType(value); }
    }
    public Builder SetType(int value) {
      PrepareBuilder();
      result.hasType = true;
      result.type_ = value;
      return this;
    }
    public Builder ClearType() {
      PrepareBuilder();
      result.hasType = false;
      result.type_ = 0;
      return this;
    }
    
    public bool HasArea {
      get { return result.hasArea; }
    }
    public int Area {
      get { return result.Area; }
      set { SetArea(value); }
    }
    public Builder SetArea(int value) {
      PrepareBuilder();
      result.hasArea = true;
      result.area_ = value;
      return this;
    }
    public Builder ClearArea() {
      PrepareBuilder();
      result.hasArea = false;
      result.area_ = 0;
      return this;
    }
    
    public bool HasCommand {
      get { return result.hasCommand; }
    }
    public int Command {
      get { return result.Command; }
      set { SetCommand(value); }
    }
    public Builder SetCommand(int value) {
      PrepareBuilder();
      result.hasCommand = true;
      result.command_ = value;
      return this;
    }
    public Builder ClearCommand() {
      PrepareBuilder();
      result.hasCommand = false;
      result.command_ = 0;
      return this;
    }
    
    public bool HasContent {
      get { return result.hasContent; }
    }
    public pb::ByteString Content {
      get { return result.Content; }
      set { SetContent(value); }
    }
    public Builder SetContent(pb::ByteString value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasContent = true;
      result.content_ = value;
      return this;
    }
    public Builder ClearContent() {
      PrepareBuilder();
      result.hasContent = false;
      result.content_ = pb::ByteString.Empty;
      return this;
    }
  }
  static SocketModelPB() {
    object.ReferenceEquals(global::SocketModelDef.Descriptor, null);
  }
}

#endregion


#endregion Designer generated code
